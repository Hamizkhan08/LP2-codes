graph={
'A':['B','C'],
'B':['D','E'],
'D':[],
'E':['F'],
'F':['G','H'],
'G':[]
}

def bfs(visited,graph,node):
    visited.append(node)
    queue.append(node)
    while queue:
        s=queue.pop(0)
        print(s,end=" ")
        for neighbour in graph.get(s,[]):
            if neighbour not in visited:
                visited.append(neighbour)
                queue.append(neighbour)

def dfs(visited,graph,node):
    if node not in visited:
        print(node,end=" ")
        visited.add(node)
        for neighbour in graph.get(node,[]):
            dfs(visited,graph,neighbour)

print("BFS")
visited=[]
queue=[]
bfs(visited,graph,'A')

print("\n\nDFS")
visited=set()
dfs(visited,graph,'A')